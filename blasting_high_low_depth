
```
# IT WORKSSSSSS
```
# get rid of all newlines in multifasta file
awk '/^>/ {print (NR==1 ? " " : RS) $0; next} { printf "%s", $0} END {printf RS}' $1 copy_allo.fasta.contigs.fasta > noNew_allo.fasta.contigs.fasta

# grep the contig of interest and send to new fasta file
grep -A 1 "^>tig00001724" noNew_allo.fasta.contigs.fasta > c1724.fasta

# blasting allo contig against laevis reference to find homologous region (not working yet)
blastn -query /home/froglady/projects/rrg-ben/for_jade/Adam_allo_genome_assembly_with_bubbles/c1724.fasta -db ../../../for_jade/home/froglady/projects/rrg-ben/froglady/2024_allo/2021_XL_v10_refgenome/XENLA_10.1_genome.fa_blastable -outfmt 6 -out c1724.out
```


# Ben Solution


# make dictionary file
```
#!/bin/sh
#SBATCH --job-name=dictionary
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=1
#SBATCH --time=24:00:00
#SBATCH --mem=8gb
#SBATCH --account=rrg-ben


module load java
module load StdEnv/2023 picard/3.1.0


# code to run: sbatch make_dict.sh allo.fasta.contigs.fasta 

java -jar $EBROOTPICARD/picard.jar CreateSequenceDictionary REFERENCE=${1} OUTPUT=allo_reference_contigs.dict
```

# grep location (SN) from .dict file and manually make .bed file
 grep "SN:tig00001764" allo_reference_contigs.dict

# grab fasta from allo multifasta file
bedtools getfasta -bed tig1764.bed -fi allo.fasta.contigs.fasta  -fo tig1764.fa

# blast allo fasta file against laevis reference 

```





